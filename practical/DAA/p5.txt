Code : 
public static boolean isSafe(int board[][], int row, int col){
        for(int i=row-1; i>=0; i--){ 
            if(board[i][col] == 1){
                return false;
            }
        }
        for(int i=row-1, j=col-1; i>=0 && j>=0; i--, j--){    
            if(board[i][j] == 1){
                return false;
            }
        }
        for(int i=row-1, j=col+1; i>=0 && j<board.length; i--, j++){    
            if(board[i][j] == 1){
                return false;
            }
        }
        return true;
    }

    public static void nQueens(int board[][], int row){
        if(row == board.length){
            printBoard(board);
            System.out.println("-------------");
            return;
        }

        for(int j=0; j<board.length; j++){
            if(isSafe(board, row, j)){
                board[row][j] = 1;
                nQueens(board, row+1);
                board[row][j] = 0;
            }
        }
    }
    
    public static void printBoard(int board[][]){
        for(int i=0; i<board.length; i++){
            for(int j=0; j <board.length; j++){
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        int n = 8;      // for board 4x4
        int board[][] = new int[n][n];
        for(int i=0; i<board.length; i++){
            for(int j=0; j <board.length; j++){
                board[i][j] = 0;
            }
        }
        nQueens(board, 0);
    }

Output : 
0 0 0 0 1 0 0 0
0 1 0 0 0 0 0 0
0 0 0 1 0 0 0 0 
0 0 0 0 0 1 0 0
0 0 0 0 0 0 0 1
0 0 1 0 0 0 0 0
1 0 0 0 0 0 0 0
0 0 0 0 0 0 1 0
